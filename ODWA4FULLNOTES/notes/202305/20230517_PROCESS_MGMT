Process Management

Program: is a file that contains set of instructions that can be passed as an input to the operating system of the computer asking to execute it on the underlying hardware of the computer

In a multi-user and multi-programming operating system like linux, more than one programs are executed in-parallel or simultaneously (based on the hardware architecture), by sharing the physical system resources of the machine across these programs.
	
How does the operating system knows what are the programs under execution, and which programs are being allocated with what resources and how does it keeps track of the status of their execution?
To keep track of the programs and their resources being alloted operating system creates an process (process control block) in which it stores the information about the program under execution

A process is nothing but a program under execution, the operating system identifies the system resources allocated to the program through the help of process. 
upon asking the linux operating system to run/execute a program, it creates an process and for each process it associates an unique id called process id (PID). The PID is unique across all the process of the operating system and is generated by the linux itself. By using the PID we can manage the process like killing or changing the priority of the process etc

For each process linux will internally keeps track of the information like
1. owner = the user who has launched the process
2. group = the primary group of the user who launched the process becomes the group of the process
3. PID = unique id of the process
4. started date/time = when does the process has been started
5. memory = allocated memory
6. cpu = cpu allocated
7. program = process is created for the program
within the pcb block of the process (process control block). For each process in linux, it stores the information about the process in a file under /proc directory

How to see the information about the processes that are running on the linux operating system?
In windows we have task manager, in that we can see the process that are running on the operating system, their memory and cpu utilization. if there is an unresponsive process exists we can kill the process as well. Similarly in linux operating system how do we able to manage the processes and kill them if required.
	
That is where linux operating system has to provide bunch of process management utilities/commands through which we should be able to manage the processes.

In linux operating system to see all the running processes we need to use a command called "top"
top stands for "table of processes"	
	
top - 20:57:05 up 27 min,  1 user,  load average: 0.34, 0.15, 0.13
Tasks: 218 total,   1 running, 217 sleeping,   0 stopped,   0 zombie
%Cpu(s):  0.9 us,  0.5 sy,  0.0 ni, 98.6 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
MiB Mem :   5933.0 total,   3469.6 free,    998.4 used,   1465.1 buff/cache
MiB Swap:   2048.0 total,   2048.0 free,      0.0 used.   4656.8 avail Mem 
    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                                                     
   1846 sriman    20   0 4957632 382432 151360 S   7.0   6.3   0:27.36 gnome-shell                                                 
   4337 sriman    20   0  568120  58312  44916 S   1.3   1.0   0:02.18 gnome-terminal-                                             
    500 systemd+  20   0   14828   6244   5452 S   0.3   0.1   0:01.94 systemd-oomd                                                 
   1162 root      20   0  298324   1292   1152 S   0.3   0.0   0:00.66 VBoxDRMClient                                               
   2448 sriman    20   0  227512   2528   2168 S   0.3   0.0   0:02.91 VBoxClient                                                   
   4384 sriman    20   0   21864   4152   3312 R   0.3   0.1   0:00.18 top                                                         
      1 root      20   0  168136  13276   8184 S   0.0   0.2   0:03.97 systemd   
the top command shows the list of processes that are currently running on the operating system continously until we press	the 'q'
				
PID  = process id
USER = owner of the process who launched it
PR   = priority
NI   = nice value of the process
VIRT = virtual memory assigned to the process
RES  = reserved memory
SHR  = shared memory
S    = status of the process
%CPU = %CPU usage
%MEM = %Memory usage
TIME+= elapsed time (how long the process is running)
COMMAND = the command used for launching the process

What are the possible statuses in which a process can exist in linux operating system?
There are 6 possible statuses in which a process can exists in linux operating system
1. D = daemon (un-interuptable process) = background process which doesnt require user interaction, by default all the operating system process are daemon process only. usually those are long running processes and doesnt require user interaction/input while executing.
	
2. S = sleeping and cpu is not allocated. The operating system has not allocated cpu for that process and the process is currently kept under waiting state.

3. T = traced/terminated. The process has been completed its execution and has been terminated

4. R = Running. The process under execution and the operating system has allocated cpu/memory for it

5. I = Idle (the process is not performing any operation, but the cpu has been allocated). The cpu is allocated to the process, but the process is waiting for completion of an user input or for someother process/resource to be available.
	
6. Z = zoombie process

What is an zoombie process?
A process during its execution might launch another process within it, which is called "child process". The linux operating system to keep track of the information about what is the child process and who is the parent process for it, it stores the pid of the parent process as ppid in the child process interlinking them

Whenever the child process has finished execution and got terminated, the operating system has to release the process information, but instead the operating system marks the child process as "Z" (zombie process) without removing the process information. So that the parent process can collect the information about the child process

Zombie process = is a process which has been finished or terminated, but kept in memory for parent process to access its information.
-----------------------------------------------------------------------------------------------------------------------------------	



	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	


























