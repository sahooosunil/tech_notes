1. How to use regular expressions in linux shell commands?
There are 3 symbols that can be used as part linux shell commands as regular expressions
1. * = any number of any characters match
2. ? = any single character match
3. [] = single character within the given group of characters match

$HOME
|-products
	|-ucb-pants.txt
	|-usp-pants.txt
	|-lee-jackets.txt
	|-hrx-jackets.txt
	|-nike-shoes.txt
	|-addidas-shoes.txt
	|-puma-shoes.txt
	|-jackets.txt
	|-shoes.txt
	
	
1.1 show me all the products inside the products/ directory
ls products/
	
1.2 show me all the pants in the products/ directory
ls "products/*pants.txt"

	
1.3 show me 3 character brand pants in product/ directory
ls products/???-pants.txt

1.4 show me 3 character brand, with any products under product/ directory
ls products/???-*

1.5 show me all the products whose name starts with either 'u' or 'l'
ls products/[ul]*
-----------------------------------------------------------------------------------------------------------------------------------
2. working with ranges in shell command
we wanted to repeatedly execute a shell command over a range of arguments/values, this can be done using {}

echo 1
echo 2
echo 3
echo 4
echo 5
echo 6
echo 7
echo 8
echo 9
echo 10
here in the above example we wanted to repeatedly execute echo command by passing a range of values starting from 1..10 instead of writing the command with 10 input values we can use {} operator as below

echo {1..10}

want to create 10 files with name day1 to day10
touch day{1..10}.txt

how to delete all the files with name ranging from day1 to day10
rm day{1..10}.txt

note:
there is a difference between [] and curly bracket
[] = group of inputs (choice of inputs)
{} = range of inputs 
----------------------------------------------------------------------------------------------------------------------------------
working with hidden files in linux operating system
In linux if we create a file/folder startings with "." aspart of its name, then linux treats the file/folder as hidden and will not display the file when we use ls command

touch .secret = here the filename started with ".", so linux treats this as an hidden file
mkdir .credentials = creates an hidden directory

when we use ls command the above 2 files/folders will not be listed, to see the hidden files and folders we need use -a switch with ls command

ls -a = -a stands for all 
-----------------------------------------------------------------------------------------------------------------------------------
using more 
when we are using the linux bash commands, sometimes the commands might generate huge amount of output that may not fit the screen easily to read, and the contents would scrolled up automatically. so the only way to read the output is manually scroll using the scroll bars in the page to read the output, that becomes difficult job.
instead of it we can use more command, so that the output of the command can be scrolled manually line by line and can read easily.
	
tree / | more
cat story.txt = the story.txt has 500 lines of text, when applied cat stories.txt the page would be auto-scrolled and cannot reads the contents of the file, we can use more along with cat, to scroll through lines

cat story.txt | more

the more pauses the output after 1 page is filled and allows us to press the enter button to scroll line by line until we press 'q', to quit scrolling
-----------------------------------------------------------------------------------------------------------------------------------
working with head and tail commands

1. head
we can see the contents of a file using cat filename command, if the file is too big, and if we use cat command it renders the whole contents of the file on the screen leaving us to the last lines of the file. but if we want to see the top few lines within the file we can only see those top lines using head

head is also used for seeing the contents of the file only, but we can see or limit the contents being generated from the top of file using this command

head filename = shows by default top 10 lines in the file
head -n filename = shows the n number specified lines from the top of the file

for eg.. if we want to see only 5 lines from the top of the file
head -5 filename

2. tail
tail is used for seeing the contents inside the file from the bottom/end of the file, its similar to head command only

tail filename = shows last 10 lines of the file from the bottom

if we want to see specified number of lines from the bottom then we can use
tail -n filename 

The real purpose of the tail is used for seeing the log files generated by the programs and is highly used command in linux shell commands.
	
What is a log file, what is the purpose of it?
Log files are generated by the software programs during their execution emitting intermediate output, helping the programs to trace and debug the programs easily
The log files will be generated continously by the programs while there are under execution and usually the log files will be written with extension as
1. .log
2. .out
3. .err
4. debug
etc

usually while seeing the contents of the log file we want to see the latest output generated by the programs,this can be achieved using tail command

in addition tail command has a switch -f stands for flow of output, while the program is generating the log contents we can scroll through the output generated by the program into the file using

tail -f filename










































	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

















































































































































































































	
	
	
	
	
	
	
	
	





