1. What are the regular expressions that are allowed to be used aspart of the linux commands?
There are 3 symbols are supported to be used as special characters in linux commands
1. * = match any number of any characters
2. ? = match single any character  
3. [] = match single character within the group of characters given in the []

2. what are ranges, what is the purpose of it?
if we wanted to repeatedly execute the shell command over a range of values then we can use ranges. ranges are denoted with {min..max}

touch file{1..10}

3. How to create an hidden files or folders in the linux operating system?
if we create a filename or a directory starting with "." character, the linux treats those files/directories as hidden and will not list them when we use ls

cat > .secret = creates an hidden file
ls = the .secret file will not be shown up when we use ls command
we need to use ls -a (here -a stands for all files/folders)
	
4. What is more, why do we need to use it?
while using the linux commands, sometimes the commands might generate huge amount of output, that may not fit for a page to see. if we want to scroll through the output of the command then we need to use more in conjunction with linux command

cat filename | more
ls -l | more

to quit scrolling the output anytime we need to press 'q' 
----------------------------------------------------------------------------------------------------------------------------------
head and tail command

1. head
head is also similar to cat, which is used for accessing/showing the contents of a file, when seeing the contents of large file, if we use cat it shows all the contents of the file scrolling up and leaves us at the last lines of the line. In case if we want to see only the top few lines of a file then we can use head

head filename = by default displays only top 10 lines
head -n filename = -n used for accessing specified number of lines only

2. tail 
tail is also same as cat only, but used for seeing the latest or the bottom lines of a file, usually tail is used for accessing the log files of an application.
	
tail filename = displays from the bottom of the file last 10 lines only
tail -n filename = display only the specified number of lines from the bottom of the file

Logging.
The developer can add log statements that generates intermediate output while executing the program, that acts as checkpoints for the developer to debug the program easily. This process of generating the intermediate output statements while executing the program is called logging

In a large application, the amount of log output generated by the programs is huge, so the log output of the program will be persisted or written on to an log file, so that developer can use the log file to identify the problems if any reported.
	
The developer can always use tail command for browsing or accessing the log files generated by the programs. in addition we can browse through log file that is generated by an executing program using -f

write the below program by typing gedit printnumbers.sh, this opens an text editor, then type the below program or code, save and close the editor.

printnumbers.sh
----------------
#!/bin/bash
I=1
while [ $I -lt 200 ]
do
	echo $I >> ~/numbers.log
	I=$[I+1]
	sleep 1s
done

2. grant execute permission to the program by typing the below command
chmod u+x printnumbers.sh
3. run the program
./printnumbers.sh

4. open one more tab in the terminal and navigate to $HOME directory and type below command
tail -f ~/numbers.log
----------------------------------------------------------------------------------------------------------------------------------
How to compare the contents of 2 different files?
There are 2 bash shell commands are available for comparing the contents of 2 files
1. cmp
2. diff

1. cmp
cmp stands for "compare", it is used for comparing 2 files byte by byte and output the first difference between their file contents.
let us consider 2 files to understand better

menu.txt
idly
poori
dosa
poha

foodmenu.txt
idly
poori
dosa
vada
poha
bonda

#1.
when we use cmp command for comparing the above 2 files

cmp menu.txt foodmenu.txt
it compares menu.txt and foodmenu.txt byte by byte and shows the first difference within those 2 files as below
menu.txt foodmenu.txt differ: 14 byte, line 4
	
#2. if both files are same:
if doesnt show any output


	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	




























































































	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
