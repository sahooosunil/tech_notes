#4. awk
awk is an utility that is widely used by the programmers for performing operations on the text content like
1. searching and extracting the matching lines of content
2. extracting fields of data based on delimiter
3. performing transformation
4. filtering and applying actions on the data

syntax:-
awk [options] 'selectioncriteria {action}' file

There are implicit or pre-defined variables are there in awk that can be used for extracting or formating the output generated by the awk
1. NR = Nth Record
2. NF = Number of Fields
3. FS = Field Separator (default: space)
4. RS = Record / Row separator (default: new line)	
5. OFS = Output Field Separator (default: space)	, while writing the output each field should be delimited with what separator we can specify using this variable
6. ORS = Output Record Separator (default: new line), using this variable we can specify each line should be delimited with what separator
-----------------------------------------------------------------------------------------------------------------------------------
accounts.txt
-------------
1093,Mathew,savings,IFSC03938,icicibank,20000
1038,Andrew,current,IFSC03839,sbi,15000
1394,Steve,savings,IFSC03938,icicibank,23000
3948,Philip,savings,IFSC0394,hdfc,948
	
syntax: awk [options] 'selectioncriteria {action}' file	

1. awk '{print}' accounts.txt = cat

here we didnt specify options and selection criteria but we specified action as {print} that prints the contents of the whole file which is equal to cat


2. filter the records based on selection criteria
awk '/savings/ {print}' accounts.txt

3. print specific fields in each record rather than all the fields in the line

awk parses each line in the file based on seperator and stores these fields in an implicit variables starts from $0 to $n based on number of fields
$0 = refers to entire row
$1 = indicates first field in the row
goes on until the last field
now we can print specific fields of each row by referring these implicit variables

awk -F "," '{print $2, $4}' accounts.txt

#4. How to process specific records of data only?
awk -F "," 'NR>=2 && NR<=4 {print $2 $4}'	accounts.txt

#5. display the records who has atleast 4 fields in each row
awk -F "," 'NF >= 4 {print}' accounts.txt

#6. display all the accounts who has more than 1000 balance?
awk -F ',' '$6 >= 1000 {print}' accounts.txt
awk -F "," '$6>=1000 && /savings/ {print}' accounts.txt

#7. display only the records who has more than 30 characters?
awk 'length($0) > 30 {print}'	accounts.txt






















