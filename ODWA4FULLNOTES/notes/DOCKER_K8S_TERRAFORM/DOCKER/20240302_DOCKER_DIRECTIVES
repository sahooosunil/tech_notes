#5. RUN directive
RUN is an directive used for running any command during the time of building the docker image. The output generated by the RUN directive command will be added or written as a interim/intermediate layer onto of the image, it will not modify the existing image.
So that these interim layers can be reused in other images that we build across

RUN is an image building instruction that would be executed during the time of building the image, so it is used for installing software packages/libraries and writing configuration files onto the image. If we want to execute programs or perform any execution operations those needs to be done during the time of running container by using container instructions rather than image building instructions

syntax:-
RUN command

The commands we want to execute using the RUN depends on the base image platform we choose. If it is an linux platform base images we can run shell commands and if the base image is windows based then we need to use DOS shell commands.
	
~/tree/>
|-Dockerfile

Dockerfile
-----------
FROM ubuntu:24.04
RUN apt update -y
RUN apt install -y openjdk-17-jdk
RUN apt install -y maven
RUN wget https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.19/bin/apache-tomcat-10.1.19.tar.gz
RUN tar -xzvf apache-tomcat-10.1.19.tar.gz
ENV TOMCAT_HOME=~/apache-tomcat-10.1.19
ENV PATH=$PATH:$TOMCAT_HOME/bin
CMD ["/bin/bash", "-c", "catalina.sh run"]

#6. COPY
COPY is a directive used for copying files/directories from build context into the docker image at the time of building the image.
usually when we are packaging our project into a docker image, we need to copy the project binaries into the image, so that it the application can be executed inside the container, so we can use COPY directive to copy the resources/files/binaries of the project (build context) into the image.

	
~/billdesk:/>
|-src
  |-main
		|-java
			|-com
			  |-billdesk
					|-main
		  			|-BillDesk.java
		|-resources
|-target
	|-classes
	|-.jar
|-pom.xml
|-Dockerfile

package com.billdesk.main;
public class BillDesk {
	public static void main(String[] args) {
		System.out.println("Billdesk application is running inside the docker container!");
	}
}
~/billdesk:/> mvn clean verify

Dockerfile
----------
FROM ubuntu:24.04
RUN apt update -y
RUN apt install -y openjdk-17-jdk
RUN mkdir -p /u01/apps
COPY target/billdesk-1.0.jar /u01/apps
ENV CLASSPATH=/u01/apps/billdesk-1.0.jar
CMD ["java", "com.billdesk.main.BillDesk"]




























































