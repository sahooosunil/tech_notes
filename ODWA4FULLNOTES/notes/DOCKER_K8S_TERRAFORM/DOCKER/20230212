How does docker runs multiple containers on a machine isolated from each other?
docker relies on 3 features of the linux operating system to have the containers run isolated from each other
1. linux namespaces
2. cgroups
3. union filesystem

1. linux namespaces
namespaces is an kernel feature where it partitions the kernel resources so that one set of processes sees one set of resources from others. there are 6 namespaces are there
1.1 user namespace
1.2 pid (process) namespace
1.3 mount namespace
1.4 ipc namespace
1.5 network namespace
1.6 UTS (unix time sharing) namespace

through namespaces we can isolate the kernal resources across the processes of the operating system.
	
2. cgroups
cgroups stands for control groups, it is a linux feature through which we can limit the allocation of cpu, memory and disk i/o to the process that are running on the linux system.
	
3. union filesystem
union filesystem allows files and directories of separate filesystem, which are knows as branches to be overlaid forming an single coherent filesystem.
	
Initially linux doesnt have these features to run the containers isolated, later on from linux 2.4.11 version in 2008, these features are added to support containers.	
--------------------------------------------------------------------------------------------------------------------------------
docker architecture
The docker architecture comprises of 5 main parts
1. docker engine
2. docker cli
3. docker registry
4. images
5. containers

1. docker engine
docker engine is the core component of the docker system, that takes care of running the docker containers out of the docker image on a docker host.
The docker engine has 3 more sub-components inside it
1.1 docker daemon
1.2 containerd
1.3 runc


	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	